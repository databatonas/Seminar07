// Задача 56.
/* Задайте прямоугольный двумерный массив. Напишите программу, которая будет находить строку с 
   наименьшей суммой элементов. Например, задан массив:
   1 4 7 2
   5 9 2 3
   8 4 2 4
   5 2 6 7
   Программа считает сумму элементов в каждой строке и выдаёт номер строки с наименьшей суммой элементов: 
   1 строка.*/

try /* Блок обработки исключений.*/
{
    Console.WriteLine("Введите целое натуральное число количества строк матрицы:");

    int rows = int.Parse(Console.ReadLine()!); /* (rows- перевод- строки). Функция Parse () разрешает 
    переводить строку, которая состоит из цифр, в целое число. (!)- для обработки исключений.*/

    if (rows <= 0) /* Если пользователь ввёл количество строк, равным или менше нуля, то...*/
    {
        Console.WriteLine("Количество строк в матрице не может быть меньше или равно нулю.");
        return; /* и вернёмся к началу операции.*/
    }
    Console.WriteLine("Введите целое натуральное число количества столбццов матрицы:");
    int columns = int.Parse(Console.ReadLine()!); // columns- перевод- столбцы.

    if (columns <= 0) /* Если пользователь ввёл количество столбцов, равным или менше нуля, то...*/
    {
        Console.WriteLine("Количество столбцов в матрице не может быть меньше или равно нулю.");
        return; /* и вернёмся к началу операции.*/
    }
    Console.WriteLine("Введите число начала интервала заполнения матрицы:");

    int beginning = int.Parse(Console.ReadLine()!); /* Вводим переменную (beginning- перевод- начало).*/

    Console.WriteLine("Введите число конца интервала заполнения матрицы:");

    int end = int.Parse(Console.ReadLine()!); /* Вводим переменную (end- перевод- конец).*/

    Console.WriteLine(); /* Пустая строка для пробела между вводом значений и ответа.*/

    end = end + 1; /* Добавляем единицу, потому, что при использовании генератора псевдослучайных 
                      чисел Random(), последняя цифра не включается.*/

    int[,] matrix = new int[rows, columns]; /* Здесь int- тип данных, [,]- указатель того, что будет две 
    размерности (двумерный массив). Одна размерность- это строки. Вторая размерность- столбцы. 
    matrix- наименование массива.
    new int- новый массив int. [rows,columns]- (rows- количество строк), (columns- количество  столбцов).*/



    /* Метод, который заполняет нашу матрицу случайными числами.*/
    void FillArray(int[,] matrix)
    {
        for (int i = 0; i < matrix.GetLength(0); i++) /* Далее перебираем строки. Для общего случая можно 
        написать количество строк так- matrix.GetLength(0), где (0)- означает строки. */
        {
            for (int j = 0; j < matrix.GetLength(1); j++) /* Здесь обращаемся к конкретному элементу на 
            позиции (i и j) и...*/
            {
                /*пишем, через использование генератора псевдослучайных чисел Random(). Next(beginning,end) 
                  (возьмём из интервала от beginning до end).*/
                matrix[i, j] = new Random().Next(beginning, end);
            }
        }
    }

    /* Метод, который будет выводить на экран матрицу. 
       В качестве аргумента мы передаём прямоугольную таблицу чисел int[,] с именем matrix.*/
    void PrintArray(int[,] matrix)
    {
        for (int i = 0; i < matrix.GetLength(0); i++) /* Далее перебираем строки. Для общего случая можно 
        написать количество строк так- matrix.GetLength(0), где (0)- означает строки. */
        {
            for (int j = 0; j < matrix.GetLength(1); j++) /* (1)- означает столбцы.*/
            {
                Console.Write($"{matrix[i, j]} "); /*Все значения каждой строки выводятся в одну отдельную 
                строку.
                Если написать WriteLine- переход на следующу строку, то ответ будет выводиться в столбец.*/
            }
            Console.WriteLine(); /* Пустая строка. Если её не будет, то все 
                                    значения будут выводиться в одну строку.*/
        }
    }

    /* Метод, который который будет находить строку с наименьшей суммой элементов.*/

    int[] arr = new int[] { }; /* Создаём новый одномерный массив для дальнейших действий.*/

    void MinRowsSum(int[,] array, int[] arr)/* В качестве аргумента будут приходить некоторые массивы:
                                                  array - двумерный массив и arr - одномерный массив.*/
    {
        int l = 0;   /* Создаём переменную (l) - индекс нового одномерного массива 
                        (arr) и присваиваем ему нулевое значение.*/
        int sum = 0; /* Создаём переменнную (sum) - сумма элементов строки.*/

        for (int i = 0; i < array.GetLength(0); i++) /* (1)- означает строки. Перебираем столбец, 
        так как в данном цикле меняется позиция строки.*/

        {
            for (int j = 0; j < array.GetLength(1); j++) /* Далее перебираем строки. Для общего случая,
            можно написать количество столбцов так- matrix.GetLength(1), где (1)- означает столбцы. */
            {
                if (i == i + 1 || j == 0) /* Если при переборке массива перешли на следующую строку, то...*/
                {
                    sum = 0; /* сумму обнуляем.*/
                }
                sum = sum + array[i, j]; /* Считаем сумму элементов строки.*/
            }

            arr = arr.Concat(new int[] { sum }).ToArray(); /* Добавление числа в новый одномерный 
                                                              массив (arr).*/

            arr[l] = sum; /* Присвоим элементу одномрного массива сумму строки двумерного массива и ...*/

            Console.Write($"{arr[l]} "); /* выведем значение на экран сумму каждой строки через пробел.*/

            l++; /* Увеличим индекс одномерного массива на единицу.*/
        }

        int indexmin = 0;            /* Создаём переменную (indexmin) - индекс минимального числа и 
                                        присваиваем ей значение ноль, что соответствует первому элементу 
                                        массива.*/

        int z = 1;                   /* Создаём переменную (z) - индекс текущего числа и присваиваем ей 
                                        значение (1), что соответствует второму элементу массива.*/

        int min = arr[indexmin];     /* Создаём переменную (min) - минимальное число и присваиваем ей 
                                        значение элемента массива с индексом минимального числа.*/

        while (z < rows)             /* До тех пор, пока индекс текущего числа одномерного массива меньше 
                                        количества строк начального двумерного массива...*/
        {
            if (arr[z] < min)        /* Если текущее число меньше минимального, то...*/
            {
                indexmin = z;        /* индексу минимального числа присваиваем значение 
                                        индекса текущего числа и ...*/

                min = arr[indexmin]; /* минимальному числу присваиваем значение элемента с 
                                        индексом минимального числа.*/
            }
            z++; /* после каждой итерации увеличиваем значение индекса текущего числа на единицу.*/
        }
        Console.WriteLine(); /* Пробел для разделения ответов на экране.*/

        Console.WriteLine("Ответ:"); /* Вывод данного текста на экран.*/

        /* После того, как выяснили строку с минимальной суммой элементов пробежим по нашему массиву ещё 
           раз для того, чтобы выяснить есть ли , ещё строки с таким же минимальным значением суммы.*/

        int x = 0; /* Создаём переменную (x) - индекс текущего числа и присваиваем ей 
                      значение (0), что соответствует первому элементу массива.*/

        while (x < rows) /* До тех пор, пока индекс текущего числа одномерного массива меньше 
                            количества строк начального двумерного массива...*/
        {
            if (arr[x] == min) /* Если значение текущего элемента массива совпадает с 
                                  минимальным значением, то...*/
            {
                Console.WriteLine($"{x + 1} строка"); /* выведем их все на экран. Так как, 
                индексирование начинается с нуля, то в ответ добавим единицу, чтобы пользователь видел 
                на экране адекватную информацию.*/
            }
            x++; /* После каждой итерации увеличиваем значение индекса текущего числа на единицу.*/
        }
    }

    FillArray(matrix);  /* Вызов метода заполнения случайными числами нашего массива.*/
    PrintArray(matrix); /* Вызов метода вывода на печать нашего массива, заполненного случайными числами.*/
    Console.WriteLine(); /* Переход на новую строку.*/
    Console.WriteLine("Сумма каждой строки через пробел");
    MinRowsSum(matrix, arr); /* Вызов метода, который упорядочит по убыванию элементы каждой строки 
                                двумерного массива.*/

}
catch /* Окончание блока обработки исключений.*/
{
    Console.WriteLine("Некорректный ввод данных.");
}