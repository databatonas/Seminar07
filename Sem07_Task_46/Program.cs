// Задача 46.
/* Задайте двумерный массив размером m * n, заполненный случайными целыми числами.
m = 3, n = 4.
14819
5-233-2
77381*/

/* Метод, который будет выводить на экран матрицу. 
В качестве аргумента мы передаём прямоугольную таблицу чисел int[,] с именем matrix.*/

void PrintArray(int[,] matrix)
{
    for (int i = 0; i < matrix.GetLength(0); i++) /* Далее перебираем строки. Для общего случая можно 
    написать количество строк так- matrix.GetLength(0), где (0)- означает строки. */
    {
        for (int j = 0; j < matrix.GetLength(1); j++) /* (1)- означает столбцы.*/
        {
            Console.Write($"{matrix[i, j]} ");/*Все значения каждой строки выводятся в одну отдельную строку.
            Если написать WriteLine- переход на следующу строку, то ответ будет выводиться в столбец.*/
        }
        Console.WriteLine(); /* Пустая строка. Если её не будет, то все 
                                значения будут выводиться в одну строку.*/
    }    
}

Console.WriteLine("Введите количество строк матрицы:");
int rows = int.Parse(Console.ReadLine()!); /* (rows- перевод- строки).Функция Parse () разрешает 
переводить строку, которая состоит из цифр, в целое число. (!)- для обработки исключений.*/
Console.WriteLine("Введите количество столбцов матрицы:");
int columns = int.Parse(Console.ReadLine()!); // columns- перевод- столбцы.

Console.WriteLine("Введите число начала интервала заполнения матрицы:");
int beginning = int.Parse(Console.ReadLine()!); // beginning- перевод- начало.

Console.WriteLine("Введите число конца интервала заполнения матрицы:");
int end = int.Parse(Console.ReadLine()!); // end- перевод- конец.
Console.WriteLine(); /* Пустая строка для пробела между вводом значений и ответа.*/

end = end + 1; /* Добавляем единицу, потому, что при использовании генератора псевдослучайных 
                  чисел Random(), последняя цифра не включается.*/

int[,] matrix = new int[rows, columns]; /* Инициализация. Определим двумерный массив, например, (matrixix)
                                           и укажем в нём три строки и семь столбцов.*/

/* Метод, который заполняет нашу матрицу случайными числами.*/

void FillArray(int[,] matrix)
{
    for (int i = 0; i < matrix.GetLength(0); i++)
    {
        for (int j = 0; j < matrix.GetLength(1); j++)
        {
            /* Здесь обращаемся к конкретному элементу на позиции (i и j)
               и пишем, через использование генератора псевдослучайных чисел Random(). 
               Next(beginning,end) (возьмём из полуинтервала от beginning до end).*/
            matrix[i, j] = new Random().Next(beginning, end);
        }
    }
}

FillArray(matrix);  /* Вызов метода заполнения случайными числами нашего массива.*/
PrintArray(matrix); /* Вызов метода вывода на печать нашего массива, заполненного случайными числами.*/
